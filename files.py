# -*- coding: utf-8 -*-
"""files.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lWlQq-4Ghp3LzfC9AsN604CBoFmo6L8V
"""

import numpy as np

import os
import glob
import sys 

import scipy.io as sio

train_folders = glob.glob('drive/My Drive/Colab Notebooks/Headposedataset/train/*')
val_folders = glob.glob('drive/My Drive/Colab Notebooks/Headposedataset/val/*')




train_images = []
train_mats=[]
for folder in train_folders:
    ffimages = glob.glob(folder + '/*.jpg')
    ffmats = glob.glob(folder + '/*.mat')
    ffimages.sort()
    ffmats.sort()
    for f in ffimages:
        train_images.append(f)
    for fm in ffmats:
      train_mats.append(fm)

print(len(train_images))

train_images = []
train_mats=[]
for folder in train_folders:
    ffimages = glob.glob(folder + '/*.jpg')
    ffmats = glob.glob(folder + '/*.mat')
    ffimages.sort()
    ffmats.sort()
    for f in ffimages:
        train_images.append(f)
    for fm in ffmats:
      train_mats.append(fm)


val_images = []
val_mats=[]
for folder in val_folders:
    vimages = glob.glob(folder + '/*.jpg')
    
    vmats = glob.glob(folder + '/*.mat')
    vimages.sort()
    vmats.sort()
    for vf in vimages:
      
      val_images.append(vf)
    for vm in vmats:
      val_mats.append(vm)

import csv
fields = ['imagepath','matpath'] 
train_rows = []
for folderi,folderm in zip(train_images,train_mats):
  trow = str(folderi),str(folderm)
  train_rows.append(trow)
  
val_rows = []
for folderi,folderm in zip(val_images,val_mats):
  vrow = str(folderi),str(folderm)
  val_rows.append(trow)      

with open("drive/My Drive/Colab Notebooks/train.csv", 'w') as csvfile: 
  # creating a csv writer object 
  csvwriter = csv.writer(csvfile) 

  # writing the fields 
  csvwriter.writerow(fields) 

  # writing the data rows 
  csvwriter.writerows(train_rows)

val_rows = []
for folderi,folderm in zip(val_images,val_mats):
  vrow = str(folderi),str(folderm)
  val_rows.append(vrow)
with open("drive/My Drive/Colab Notebooks/val.csv", 'w') as csvfile: 
  # creating a csv writer object 
  csvwriter = csv.writer(csvfile) 

  # writing the fields 
  csvwriter.writerow(fields) 

  # writing the data rows 
  csvwriter.writerows(val_rows)